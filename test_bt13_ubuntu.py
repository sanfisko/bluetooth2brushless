#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—É–ª—å—Ç—É BT13 –∏–∑ Ubuntu
–ü–æ–º–æ–≥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø—É–ª—å—Ç–∞

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
sudo python3 test_bt13_ubuntu.py

–ê–≤—Ç–æ—Ä: OpenHands
–î–∞—Ç–∞: 2025-06-06
"""

import bluetooth
import subprocess
import sys
import time
import os

BT13_MAC = "8B:EB:75:4E:65:97"

def check_bluetooth_service():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è Bluetooth —Å–ª—É–∂–±—ã"""
    try:
        result = subprocess.run(['systemctl', 'is-active', 'bluetooth'], 
                              capture_output=True, text=True)
        if result.stdout.strip() == 'active':
            print("‚úÖ Bluetooth —Å–ª—É–∂–±–∞ –∞–∫—Ç–∏–≤–Ω–∞")
            return True
        else:
            print("‚ùå Bluetooth —Å–ª—É–∂–±–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: sudo systemctl start bluetooth")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Bluetooth —Å–ª—É–∂–±—ã: {e}")
        return False

def scan_for_bt13():
    """–ü–æ–∏—Å–∫ –ø—É–ª—å—Ç–∞ BT13"""
    print(f"üîç –ü–æ–∏—Å–∫ –ø—É–ª—å—Ç–∞ BT13 ({BT13_MAC})...")
    
    try:
        devices = bluetooth.discover_devices(duration=10, lookup_names=True)
        
        print(f"üì± –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: {len(devices)}")
        
        bt13_found = False
        for addr, name in devices:
            print(f"  üìç {addr} - {name}")
            if addr.upper() == BT13_MAC.upper():
                bt13_found = True
                print(f"üéØ BT13 –Ω–∞–π–¥–µ–Ω! –ò–º—è: {name}")
        
        if not bt13_found:
            print(f"‚ùå BT13 ({BT13_MAC}) –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
            print("   - BT13 –≤–∫–ª—é—á–µ–Ω")
            print("   - BT13 –≤ —Ä–µ–∂–∏–º–µ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è")
            print("   - Bluetooth –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ –≤–∫–ª—é—á–µ–Ω")
        
        return bt13_found
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        return False

def get_device_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ BT13"""
    print(f"üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ BT13...")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º bluetoothctl –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        cmd = f"bluetoothctl info {BT13_MAC}"
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ BT13:")
            print(result.stdout)
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ BT13")
            print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–ø—Ä—è–∂–µ–Ω–∏–µ:")
            print(f"   bluetoothctl pair {BT13_MAC}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}")

def test_services():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"""
    print(f"üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ BT13...")
    
    try:
        services = bluetooth.find_service(address=BT13_MAC)
        
        if services:
            print(f"üéõÔ∏è –ù–∞–π–¥–µ–Ω–æ —Å–µ—Ä–≤–∏—Å–æ–≤: {len(services)}")
            for service in services:
                print(f"  üì° –°–µ—Ä–≤–∏—Å: {service['name']}")
                print(f"     –ü—Ä–æ—Ç–æ–∫–æ–ª: {service['protocol']}")
                print(f"     –ü–æ—Ä—Ç: {service['port']}")
                print(f"     –û–ø–∏—Å–∞–Ω–∏–µ: {service.get('description', 'N/A')}")
                print()
        else:
            print("‚ùå –°–µ—Ä–≤–∏—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("üí° –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–æ–ø—Ä—è–∂–µ–Ω–∏–µ —Å–Ω–∞—á–∞–ª–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: {e}")

def test_hid_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    print(f"üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HID –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ —Å–∏—Å—Ç–µ–º–µ
        cmd = "ls /dev/input/by-id/ | grep -i bt"
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        
        if result.stdout:
            print("üéØ –ù–∞–π–¥–µ–Ω—ã HID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:")
            print(result.stdout)
        else:
            print("‚ùå HID —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ hcitool
        cmd = f"hcitool con | grep {BT13_MAC}"
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        
        if result.stdout:
            print("üîó –ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ:")
            print(result.stdout)
        else:
            print("‚ùå –ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è HID: {e}")

def pair_bt13():
    """–ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è —Å BT13"""
    print(f"ü§ù –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è —Å BT13...")
    
    try:
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è bluetoothctl
        commands = [
            "power on",
            "agent on",
            "default-agent",
            f"pair {BT13_MAC}",
            f"trust {BT13_MAC}",
            f"connect {BT13_MAC}"
        ]
        
        for cmd in commands:
            print(f"  ‚ö° –í—ã–ø–æ–ª–Ω—è—é: {cmd}")
            full_cmd = f"echo '{cmd}' | bluetoothctl"
            result = subprocess.run(full_cmd, shell=True, capture_output=True, text=True)
            time.sleep(2)
            
        print("‚úÖ –ö–æ–º–∞–Ω–¥—ã —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è: {e}")

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—É–ª—å—Ç—É BT13")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
    if os.geteuid() != 0:
        print("‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ root:")
        print("sudo python3 test_bt13_ubuntu.py")
        sys.exit(1)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Bluetooth —Å–ª—É–∂–±—ã
    if not check_bluetooth_service():
        sys.exit(1)
    
    print()
    
    # –ü–æ–∏—Å–∫ BT13
    bt13_found = scan_for_bt13()
    print()
    
    if bt13_found:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        get_device_info()
        print()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        test_services()
        print()
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ HID
        test_hid_connection()
        print()
    else:
        # –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–ø—Ä—è–∂–µ–Ω–∏—è
        pair_bt13()
        print()
    
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print()
    print("üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:")
    print(f"   bluetoothctl info {BT13_MAC}")
    print(f"   hcitool con")
    print(f"   dmesg | grep -i bluetooth")
    print(f"   lsusb | grep -i bluetooth")

if __name__ == "__main__":
    main()